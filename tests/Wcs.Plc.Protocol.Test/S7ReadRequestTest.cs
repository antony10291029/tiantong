using NUnit.Framework;

namespace Wcs.Plc.Protocol.Test
{
  public class S7ReadRequestTest
  {
    [Test]
    public void test_d_1_100_int_read_write()
    {
      var read = new [] {
        0x03, 0x00, 0x00, 0x1F, 0x02, 0xF0, 0x80,
        0x32, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0E, 0x00, 0x00, 0x04, 0x01,
        0x12, 0x0A, 0x10, 0x02, 0x00, 0x04, 0x00, 0x01, 0x84, 0x00, 0x03, 0x20
      };
      var req = new S7ReadRequest();

      req.UseAddress("D1.100", 4);

      Assert.AreEqual(req.Message, read);
    }

    [Test]
    public void test_d_1_100_bool_read_write()
    {
      var read = new [] {
        0x03, 0x00, 0x00, 0x1F, 0x02, 0xF0, 0x80,
        0x32, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0E, 0x00, 0x00, 0x04, 0x01,
        0x12, 0x0A, 0x10, 0x02, 0x00, 0x01, 0x00, 0x01, 0x84, 0x00, 0x03, 0x21
      };

      var req = new S7ReadRequest();

      req.UseAddress("D1.100.1", 1);

      Assert.AreEqual(req.Message, read);
    }

    [Test]
    public void test_d_1_100_string_read_write()
    {
      var read = new [] {
        0x03, 0x00, 0x00, 0x1F, 0x02, 0xF0, 0x80,
        0x32, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0E, 0x00, 0x00, 0x04,
        0x01, 0x12, 0x0A, 0x10, 0x02, 0x00, 0x0A, 0x00, 0x01, 0x84, 0x00, 0x03, 0x20
      };

      var req = new S7ReadRequest();

      req.UseAddress("D1.100", 10);

      Assert.AreEqual(req.Message, read);
    }

    [Test]
    public void test_overlength_read_write()
    {
      var read = new [] {
        0x03, 0x00, 0x00, 0x1F, 0x02, 0xF0, 0x80,
        0x32, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0E, 0x00, 0x00, 0x04,
        0x01, 0x12, 0x0A, 0x10, 0x02, 0x00, 0x0A, 0x00, 0x01, 0x84, 0x00, 0x03, 0x20
      };

      var req = new S7ReadRequest();

      req.UseAddress("D1.100", 10);

      Assert.AreEqual(req.Message, read);
    }
  }
}
